package com.Nikita.lessons_12

//Напиши валидную сигнатура метода
//Напишите сигнатуру функции, которая не принимает аргументов и не возвращает значения.
fun one() {}

//Напишите сигнатуру функции, которая принимает два целых числа и возвращает их сумму.
fun two(a: Int, b: Int) = a + b

//Напишите сигнатуру функции, которая принимает строку и ничего не возвращает.
fun three(c: String) {}

//Напишите сигнатуру функции, которая принимает список целых чисел и возвращает среднее значение типа Double.
fun four(int: List<Int>): Double {
    return if (int.isNotEmpty()) {
        int.sum().toDouble() / int.size
    } else {
        0.0
    }
}

//Напишите сигнатуру функции, которая принимает nullable строку и возвращает её длину в виде nullable целого числа.
fun five(d: String?) {}

//Напишите сигнатуру функции, которая не принимает аргументов и возвращает nullable вещественное число.
fun six() {}

//Напишите сигнатуру функции, которая принимает nullable список целых чисел и не возвращает значения.
fun seven(e: List<Int>?): Unit {}

//Напишите сигнатуру функции, которая принимает целое число и возвращает nullable строку.
fun eight(f: Int) {}

//Напишите сигнатуру функции, которая не принимает аргументов и возвращает список nullable строк.
fun nine() {}

//Напишите сигнатуру функции, которая принимает nullable строку и nullable целое число и возвращает nullable булево
// значение.
fun ten(g: String?, q: Int?) {}

//
//Напиши рабочий код для следующих задач:
//Задача 1:
//Напишите функцию multiplyByTwo, которая принимает целое число и возвращает его, умноженное на 2.
fun multiplyByTwo(r: Int) = r * 2

//Задача 2:
//Создайте функцию isEven, которая принимает целое число и возвращает true, если число чётное, и false в противном
// случае.
fun isEven(t: Int): Boolean {
    return t % 2 == 0
}

//Задача 3:
//Напишите функцию printNumbersUntil, которая принимает целое число n и выводит на экран числа от 1 до n. Если число
// n меньше 1, функция должна прекратить выполнение с помощью return без вывода сообщений.
fun printNumbersUntil(n: Int) {
    if (n < 1) return
    for (i in 1..n) {
        println(i)
    }
}

//Задача 4:
//Создайте функцию findFirstNegative, которая принимает список целых чисел и возвращает первое отрицательное число
// в списке. Если отрицательных чисел нет, функция должна вернуть null.
fun findFirstNegative(u: List<Int>): Int? {
    for (number in u) {
        if (number < 0) {
            return number
        }
    }
    return null
}

//Задача 5:
//Напишите функцию processList, которая принимает список строк. Функция должна проходить по списку и выводить каждую
// строку. Если встречается null значение, функция должна прекратить выполнение с помощью return без возврата значения.
fun processList(strings: List<String?>) {
    for (str in strings) {
        if (str == null) {
            return
        }
        println(str)
    }
}